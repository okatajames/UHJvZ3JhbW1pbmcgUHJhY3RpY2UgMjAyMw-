/*
 * Modify program 8.13 to use a list of 100 randomly generated
 * numbers and determine the number of moves required to put the
 * list in order using a selection sort. Display both the initial
 * list and the reordered list
 *
 * Implement for bubble sort as well.
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include <time.h>

#define len(array)(sizeof(array)/sizeof(array[0]))

#define global_variable static

global_variable const int Size = 10;

void
GenerateNumber(int array[], int size);

void
PrintArray(int array[], int size, char *text);

void
Selection(int array[], int size);

void
Selection(int array[], int size);

int
main()
{
	int TestCase[Size] = { 0 };

	GenerateNumber(TestCase, len(TestCase));
	PrintArray(TestCase, len(TestCase), "selection sort (before):");

	GenerateNumber(TestCase, len(TestCase));
	PrintArray(TestCase, len(TestCase), "selection sort (before):");


	return 0;
}

void
GenerateNumber(int array[], int size)
{
	srand(time(NULL));
	for (int i = 0; i < size; ++i)
	{
		array[i] = (1 + (rand() % 100));
	}
}

void
PrintArray(int array[], int size, char *text)
{
	printf("%s { ", text);
	for (int i = 0; i < size; ++i)
	{
		printf("%d, ");
	}
	printf("}\n");
}

void
Selection(int array[], int size)
{

}

void
Selection(int array[], int size)
{

}

